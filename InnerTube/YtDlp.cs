using System;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using InnerTube.Models.YtDlp;
using Newtonsoft.Json;

namespace InnerTube
{
	public static class YtDlp
	{
		internal const string CookieHeader = "# Cookies.txt generated by LightTube. Do not edit";
		internal static bool ShouldRefreshCookies = true; 
		public static YtDlpOutput GetVideo(string url)
		{
			string SAPISID = Environment.GetEnvironmentVariable("SAPISID");
			string PSID = Environment.GetEnvironmentVariable("PSID");

			if (SAPISID != null && PSID != null && ShouldRefreshCookies)
			{
				string[] lines =
				{
					"# Netscape HTTP Cookie File",
					"# This file is generated by yt-dlp.  Do not edit.",
					CookieHeader,
					"",
					$".youtube.com	TRUE	/	TRUE	253402300799	SAPISID	{SAPISID}",
					$".youtube.com	TRUE	/	TRUE	253402300799	SID	{PSID}",
					$".youtube.com	TRUE	/	TRUE	253402300799	__Secure-3PSID	{PSID}",
					$".youtube.com	TRUE	/	TRUE	253402300799	__Secure-1PSID	{PSID}",
					$".youtube.com	TRUE	/	TRUE	253402300799	__Secure-1PAPISID	{SAPISID}",
					$".youtube.com	TRUE	/	TRUE	253402300799	__Secure-3PAPISID	{SAPISID}",
					$".youtube.com	TRUE	/	TRUE	253402300799	__Secure-3PSIDCC	{SAPISID}",
				};
				File.WriteAllLines("cookies.txt", lines);
				ShouldRefreshCookies = false;
			}
			Process process = Process.Start(new ProcessStartInfo
			{
				FileName = "yt-dlp",
				Arguments = $"--dump-single-json {url} --force-ipv4 --cookies cookies.txt --extractor-args \"youtube:player_skip=webpage\"",
				RedirectStandardOutput = true,
				RedirectStandardError = true,
				RedirectStandardInput = true
			});
			if (process is null)
				throw new YtDlpException(
					"[system] Failed to start yt-dlp! Make sure it is installed and also in the system PATH");
			string output = process.StandardOutput.ReadToEnd();
			string error = process.StandardError.ReadToEnd();
			if (string.IsNullOrWhiteSpace(error)) return JsonConvert.DeserializeObject<YtDlpOutput>(output);
			
			if (!error.Contains("Sign in to confirm your age. This video may be inappropriate for some users."))
				throw new YtDlpException(error);
				
			ShouldRefreshCookies = true;
			throw new YtDlpException(error);
		}
	}

	public class YtDlpException : Exception
	{
		private const string Pattern = @"\[([\S]*)\] ([\s\S]*)";
		public string ErrorNamespace;
		public string ErrorMessage;

		public YtDlpException(string error)
		{
			Regex regex = new(Pattern);
			GroupCollection groups = regex.Match(error).Groups;

			ErrorNamespace = groups[1].Value.Trim();
			ErrorMessage = groups[2].Value.Trim();
		}
	}
}